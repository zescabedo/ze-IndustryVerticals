---
ID: "ef9b8d7d-d8e4-4201-80c9-f6f640ba5dd2"
Parent: "4ff2646c-2b0f-428f-b9a0-d6ea531de713"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Click Click Launch/Functions/Site 1 Site Setup
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-ItemByIdSafe
    Import-Function Update-PageTemplate
    Import-Function Update-LinkField
    Import-Function Update-TemplateInsertOptions
    Import-Function Add-SampleImages
    
    function Invoke-ModuleScriptBody {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$Site,
        
            [Parameter(Mandatory = $true, Position = 1 )]
            [Item[]]$TenantTemplates	
        )
        
        begin {
            Write-Log "Cmdlet Add Home Renderings - Post Site Creation Script"
            Write-Verbose "Cmdlet Invoke-ModuleScriptBody - Begin"
            Import-Function Get-ProjectTemplateBasedOnBaseTemplate
        }
        
        process {
            Write-Verbose "Cmdlet Invoke-ModuleScriptBody - Process"
            $sitePath = $Site.Paths.Path
            $siteCollection = $Site.Parent
            $service = [Sitecore.DependencyInjection.ServiceLocator]::ServiceProvider.GetService([Sitecore.XA.Foundation.Variants.Abstractions.Services.IAvailableRenderingVariantService])
            $item = Get-Item -Path "$sitePath/Home" -Language $Site.Language
            Write-Verbose "My site: $sitePath"
    
            # Add sample media
            Add-SampleImages -Site $Site -TemplatePath "/sitecore/templates/Branches/Project/click-click-launch/Solterra and Co/Add Sample Images" -SiteCollection $siteCollection
            
            Write-Verbose "Reset the start item and the rendering host"
            # reset the start item and the rendering host
            $siteName = $Site.Name
            $siteGrouping = Get-Item -Path "$sitePath/Settings/Site Grouping/$($sitename)" -Language $Site.Language
            $siteGrouping.StartItem = $item.ID
    
            Write-Verbose "Create page templates in the Site Collection"
            $basePageTemplateId = "{AC9DE9BE-8E86-4147-8FBC-739D5560408B}"
            $baseHomePageTemplateId = "{4ACCF644-A506-421F-B60F-A05E5C6196B4}"
            $baseArticlePageTemplateId = "{B0602368-F67C-433C-8700-862D480546D0}"
            $baseDetailPageTemplateId = "{A9919790-3389-4FC2-ABC8-24F73C847C8E}"
            $baseLandingPageTemplateId = "{C3C9FC9E-E7D3-44E6-B777-AA23496924C7}"
            $baseProductPageTemplateId = "{9A52202D-3A77-4F6D-B9BD-6AECED9BD49A}"
            $basePageFolderTemplateId = "{84DBE64B-0FED-4125-A971-725C0155C321}"
            $audioPageTemplateId = "{1B76AF75-DD75-450C-92E3-FF0F339F490B}"
    
            $templatesRootPath = "master:/sitecore/templates/Project/$($siteCollection.Name)"
    
            $pageTemplate = Get-Item -Path "$templatesRootPath/Page"
            $pageTemplate."__Base template" = $basePageTemplateId
    
            $homePageTemplate = Update-PageTemplate -BaseTemplateId $baseHomePageTemplateId -TemplateName "Home Page" -TemplatesRootPath $templatesRootPath
            $audioPageTemplate = Update-PageTemplate -BaseTemplateId $audioPageTemplateId -TemplateName "Audio Product Page" -TemplatesRootPath $templatesRootPath
            $articlePageTemplate = Update-PageTemplate -BaseTemplateId $baseArticlePageTemplateId -TemplateName "Article Page" -TemplatesRootPath $templatesRootPath
            $detailPageTemplate = Update-PageTemplate -BaseTemplateId $baseDetailPageTemplateId -TemplateName "Detail Page" -TemplatesRootPath $templatesRootPath
            $landingPageTemplate = Update-PageTemplate -BaseTemplateId $baseLandingPageTemplateId -TemplateName "Landing Page" -TemplatesRootPath $templatesRootPath
            $productPageTemplate = Update-PageTemplate -BaseTemplateId $baseProductPageTemplateId -TemplateName "Product Page" -TemplatesRootPath $templatesRootPath
            $pageFolderTemplate = Update-PageTemplate -BaseTemplateId $basePageFolderTemplateId -TemplateName "Page Folder" -TemplatesRootPath $templatesRootPath
    
            Write-Verbose "Update insert options"
            $insertOptions = @( $articlePageTemplate.ID, $audioPageTemplate.ID, $detailPageTemplate.ID, $landingPageTemplate.ID, $productPageTemplate.ID, $pageFolderTemplate.ID )
            Update-TemplateInsertOptions -TemplateItem $homePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $audioPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $articlePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $detailPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $articlePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $landingPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $productPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $pageFolderTemplate -InsertOptions $insertOptions
    
            # Add Page Design and link partial designs
            Write-Verbose "Add Page Design and link partial designs"
            $headerPartial = Get-Item -Path "$sitePath/Presentation/Partial Designs/Global/Header" -Language $Site.Language
            $footerPartial = Get-Item -Path "$sitePath/Presentation/Partial Designs/Global/Footer" -Language $Site.Language
    
            $defaultPageDesign = New-Item -Path "$($sitePath)/Presentation/Page Designs" -Name "Default" -ItemType "{1105B8F8-1E00-426B-BF1F-C840742D827B}"
            $defaultPageDesign.PartialDesigns = "$($headerPartial.ID)|$($footerPartial.ID)"
    
            $pageDesigns = Get-Item -path "$sitePath/Presentation/Page Designs" -Language $Site.Language
            $map = [Sitecore.Text.UrlString]::new()
            $map[$homePageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$pageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$audioPageTemplate.ID] = "$($productPageDesign.ID)"
            $map[$articlePageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$detailPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$landingPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$productPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $pageDesigns.TemplatesMapping = [System.Web.HttpUtility]::UrlEncode($map.toString())
            
            Write-Verbose "Update Partial Design Rendering Variants"
            $renderingGlobalHeader = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Global Elements/GlobalHeader'
            $renderingGlobalFooter = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Global Elements/GlobalFooter'
            
            $renderingGlobalHeaderDefinition = $renderingGlobalHeader | New-Rendering
            $renderingGlobalFooterDefinition = $renderingGlobalFooter | New-Rendering
            
            Write-Verbose "Update the home page template"
            # Update the home page template
            Set-ItemTemplate -Item $item -Template $homePageTemplate.ID
            # Re-get the item with the new base template
            $item = Get-Item -Path "$sitePath/Home" -Language $Site.Language
            
            Set-ItemTemplate -Path "$sitePath/Home/Article Page" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles" -Template $pageFolderTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles/Article 1" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles/Article 2" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles/Article 3" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles/QA Article 1" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Articles/QA Article 2" -Template $articlePageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Landing Page" -Template $landingPageTemplate.ID
    
            Write-Verbose "Update the home page renderings"
            $renderingContainerFullBleed = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Page Structure/Container Full Bleed'
            $renderingMultiPromo = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/MultiPromo'
            $renderingContainerFullWidth = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Page Structure/Container Full Width'
            $renderingAccordion = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Accordions/Accordion'
            $renderingTestimonialAccordion = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/TestimonialCarousel'
            $renderingHero = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Banners/Hero'
            $renderingMultipromoTabs = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/MultiPromoTabs'
            $renderingCtaBanner = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/CTA Banner'
            $renderingAnimatedPromo = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/PromoAnimated'
            $renderingTopicListing = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/Topic Listing'
            $renderingVideo = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Media/Video'
        
            # prepare rendering definitions
            Write-Host "Get the rendering definitions"
            $renderingContainerFullBleedDefinition1 = $renderingContainerFullBleed | New-Rendering
            $renderingContainerFullBleedDefinition2 = $renderingContainerFullBleed | New-Rendering
            $renderingContainerFullBleedDefinition3 = $renderingContainerFullBleed | New-Rendering
            $renderingContainerFullBleedDefinition4 = $renderingContainerFullBleed | New-Rendering
            $renderingContainerFullBleedDefinition5 = $renderingContainerFullBleed | New-Rendering
            $renderingContainerFullBleedDefinition6 = $renderingContainerFullBleed | New-Rendering
            $renderingMultiPromoDefinition = $renderingMultiPromo | New-Rendering
            $renderingContainerFullWidthDefinition = $renderingContainerFullWidth | New-Rendering
            $renderingAccordionDefinition = $renderingAccordion | New-Rendering
            $renderingTestimonialAccordionDefinition = $renderingTestimonialAccordion | New-Rendering
            $renderingHeroDefinition = $renderingHero | New-Rendering
            $renderingMultipromoTabsDefinition = $renderingMultipromoTabs | New-Rendering
            $renderingCtaBannerDefinition = $renderingCtaBanner | New-Rendering
            $renderingAnimatedPromoDefinition = $renderingAnimatedPromo | New-Rendering
            $renderingTopicListingDefinition = $renderingTopicListing | New-Rendering
            $renderingVideoDefinition = $renderingVideo | New-Rendering
                
            # prepare rendering variants  
            Write-Host "Getting variants"
            $heroVariants = $service.GetAvailableRenderingVariants($Site, $renderingHero.Name, $renderingHero.ID, $item.TemplateID)
            $multipromoVariants = $service.GetAvailableRenderingVariants($Site, $renderingMultiPromo.Name, $renderingMultiPromo.ID, $item.TemplateID)
            $animatedPromoVariants = $service.GetAvailableRenderingVariants($Site, $renderingAnimatedPromo.Name, $renderingAnimatedPromo.ID, $item.TemplateID)
    
            $heroVariant = $heroVariants | ? { $_.DisplayName -eq "Default" }
            $multipromoVariant = $multipromoVariants | ? { $_.DisplayName -eq "Default" }
            $animatedPromoVariant = $animatedPromoVariants | ? { $_.DisplayName -eq "Default" }
            
            # add Home layout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition1 -Parameter @{ "DynamicPlaceholderId" = "22"; "excludeTopMargin" = "1"; } -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition2 -Parameter @{ "DynamicPlaceholderId" = "11"; "inset" = "1"; "backgroundColor" = "primary"; "colorScheme" = "primary"; } -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition3 -Parameter @{ "DynamicPlaceholderId" = "27"; "inset" = "1";} -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition4 -Parameter @{ "DynamicPlaceholderId" = "28"; "backgroundColor" = "primary";} -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition5 -Parameter @{ "DynamicPlaceholderId" = "31";} -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition6 -Parameter @{ "DynamicPlaceholderId" = "17"; "inset" = "1";} -FinalLayout
            Add-Rendering -Item $item -Placeholder "headless-main" -Instance $renderingContainerFullWidthDefinition -Parameter @{ "DynamicPlaceholderId" = "26";} -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-11" -Instance $renderingMultiPromoDefinition -Parameter @{ "DynamicPlaceholderId" = "12"; } -DataSource "local:/Data/MultiPromoCarousel" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-11" -Instance $renderingContainerFullWidthDefinition -Parameter @{ "DynamicPlaceholderId" = "24"; "excludeTopMargin" = "1" } -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-17" -Instance $renderingContainerFullWidthDefinition -Parameter @{ "DynamicPlaceholderId" = "18"; } -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-17/container-fullwidth-18" -Instance $renderingAccordionDefinition -Parameter @{ "DynamicPlaceholderId" = "19"; } -DataSource "local:/Data/Accordion" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-27/container-fullwidth-21" -Instance $renderingTestimonialAccordionDefinition -Parameter @{} -DataSource "local:/Data/Testimonial" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-22" -Instance $renderingHeroDefinition -Parameter @{ "FieldNames" = $heroVariant.ID; "DynamicPlaceholderId" = "23"; "colorScheme" = "secondary"; } -DataSource "local:/Data/Hero" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-11/container-fullwidth-24" -Instance $renderingMultipromoTabsDefinition -Parameter @{ "DynamicPlaceholderId" = "13"; } -DataSource "local:/Data/MultiPromoTabs" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullwidth-26" -Instance $renderingCtaBannerDefinition -Parameter @{ "DynamicPlaceholderId" = "20"; "colorScheme" = "light"; } -DataSource "local:/Data/CTA Banner" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-27" -Instance $renderingAnimatedPromoDefinition -Parameter @{ "DynamicPlaceholderId" = "15"; } -DataSource "local:/Data/AnimatedPromo" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-27" -Instance $renderingContainerFullWidthDefinition -Parameter @{ "DynamicPlaceholderId" = "21";} -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-28" -Instance $renderingTopicListingDefinition -Parameter @{ "DynamicPlaceholderId" = "30"; "backgroundTheme" = "shooting-star"; } -DataSource "local:/Data/Topic Listing" -FinalLayout
            Add-Rendering -Item $item -Placeholder "/headless-main/container-fullbleed-31" -Instance $renderingVideoDefinition -Parameter @{ "DynamicPlaceholderId" = "32"; "useModal" = "1"; "displayIcon" = "1"; } -DataSource "local:/Data/Video 1" -FinalLayout
    
            Write-Verbose "Update home page fields"
            $title = "Solterra & Co."
            $shortTitle = "Solterra & Co."
    
            $item."pageTitle" = $title
            $item."pageShortTitle" = $shortTitle
            $item."pageHeaderTitle" = $shortTitle
            $item."pageSummary" = $title
    
            $item."metadataTitle" = $title
            $item."metadataDescription" = $title
            $item."metadataKeywords" = "Alaris, electric, future"
            $item."ogTitle" = $title
            $item."ogDescription" = $title
            
            Write-Verbose "Update nagivation links"
            $aboutUs = Get-Item "$sitePath/Presentation/Partial Designs/Global/Header/Data/Global Header/About Us"
            Update-LinkField -Item $aboutUs -FieldName "link" -TargetItem $item
            $solutions = Get-Item "$sitePath/Presentation/Partial Designs/Global/Header/Data/Global Header/Solutions"
            $solutionsTargetItem = Get-Item "$sitePath/Home/Article Page" -Language $Site.Language
            Update-LinkField -Item $solutions -FieldName "link" -TargetItem $solutionsTargetItem
            $team = Get-Item "$sitePath/Presentation/Partial Designs/Global/Header/Data/Global Header/Team"
            $teamTargetItem = Get-Item "$sitePath/Home/Landing Page" -Language $Site.Language
            Update-LinkField -Item $team -FieldName "link" -TargetItem $teamTargetItem
    
            # Update links for site
            Write-Host "Update links across items"
            $landingPage = Get-Item -Path "$sitePath/Home/Landing Page"
            $articlePage = Get-Item -Path "$sitePath/Home/Article Page"
            $homePage = Get-Item -Path "$sitePath/Home"
            
            $article1 = Get-Item -Path "$sitePath/Home/Articles/Article 1"
            $article2 = Get-Item -Path "$sitePath/Home/Articles/Article 2"
            $article3 = Get-Item -Path "$sitePath/Home/Articles/Article 3"
            $articleQa1 = Get-Item -Path "$sitePath/Home/Articles/QA Article 1"
            $articleQa2 = Get-Item -Path "$sitePath/Home/Articles/QA Article 2"
    
            $siteItems = Get-ChildItem -Path $sitePath -Recurse
            foreach($siteItem in $siteItems)
            {
                foreach($field in $siteItem.Fields) 
                {
                    $linkField = $siteItem.PSFields."$($field.Name)" | Where-Object { $_ -is [Sitecore.Data.Fields.LinkField] }
                    Switch($linkField.TargetID) 
                    {
                        "{900f400b-3ba6-45ba-a77b-7f79e118c64c}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $landingPage }
                        "{6b210487-0aac-4feb-a8af-9d78ab573c0f}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $homePage }
                        "{0e8032b7-e017-42e5-84db-61fda4e1b92f}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $articlePage }
                        "{900f400b-3ba6-45ba-a77b-7f79e118c64c}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $landingPage }
                        "{3185BA20-8242-4976-AAB6-B4FC7BB4D10F}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $article1 }
                        "{F849AF70-2A4B-42D8-83C3-2C25492832DA}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $article2 }
                        "{6A955BC8-1E90-40A4-932C-07C0190368B9}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $article3 }
                        "{44C2E7E7-4ED1-4786-B7A9-FE1B13B8D7DA}" { Update-LinkField -Item $siteItem -FieldName "$($field.Name)" -TargetItem $articleQa1 }
                    }
                }
            }
            $renderingAniPromo = Get-Item -Path "/sitecore/layout/Renderings/Project/click-click-launch/Promos/PromoAnimated"
            
            $aniPromoVariants = $service.GetAvailableRenderingVariants($Site, $renderingAniPromo.Name, $renderingAniPromo.ID, $item.TemplateID)
            $aniPromoImageRightVariant = $aniPromoVariants | Where-Object { $_.Name -eq "ImageRight" }
            Get-Rendering -Item $landingPage -Rendering $renderingAniPromo -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $aniPromoImageRightVariant.ID } | `
                Set-Rendering -Item $landingPage -FinalLayout
            
            $articleListing = Get-Item -Path "$sitePath/Home/Landing Page/Data/Article Listing"
            $articleListing.Editing.BeginEdit()
            $articleListing._.featuredContent = "$($article1.ID)|$($article2.ID)|$($article3.ID)|$($articleQa2.ID)|$($articleQa2.ID)"
            $articleListing.Editing.EndEdit()
            
            Write-Verbose "Create dictionary items"
            $dictionaryRoot = Get-Item -Path "$sitePath/Dictionary" -Language $Site.Language
            $dictionaryBranchTemplate = Get-Item -Path "/sitecore/templates/Branches/Project/click-click-launch/Solterra and Co/Add Dictionary Items" -Language $Site.Language
            New-Item -Parent $dictionaryRoot -Name "Dictionary Items" -ItemType $dictionaryBranchTemplate.ID
        }
        
        end {
            Write-Log "Cmdlet Invoke-ModuleScriptBody - End"
        }
    }
    
    #$site = Get-Item .
    #Invoke-ModuleScriptBody -Site $site -Verbose
- ID: "dbbbeca1-21c7-4906-9dd2-493c1efa59a2"
  Hint: __Shared revision
  Value: "cd07ef7c-91f1-42a4-8f81-d060eedab3c7"
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20250625T112150Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "2eff325a-e4d9-4d4a-82bf-1d798bf3ec18"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250724T020223Z
