---
ID: "46d05c1b-9d19-4e26-80d1-38e41ff72cbb"
Parent: "4ff2646c-2b0f-428f-b9a0-d6ea531de713"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/Click Click Launch/Functions/Site 2 Site Setup
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-ItemByIdSafe
    Import-Function Update-PageTemplate
    Import-Function Update-TemplateInsertOptions
    Import-Function Update-LinkField
    Import-Function Add-SampleImages
    
    function Invoke-ModuleScriptBody {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory = $true, Position = 0 )]
            [Item]$Site,
        
            [Parameter(Mandatory = $true, Position = 1 )]
            [Item[]]$TenantTemplates	
        )
        
        begin {
            Write-Verbose "Cmdlet Add Home Renderings - Post Site Creation Script"
            Write-Verbose "Cmdlet Invoke-ModuleScriptBody - Begin"
            Import-Function Get-ProjectTemplateBasedOnBaseTemplate
        }
        
        process {
            Write-Verbose "Cmdlet Invoke-ModuleScriptBody - Process"
            $sitePath = $Site.Paths.Path
            $siteCollection = $Site.Parent
            $service = [Sitecore.DependencyInjection.ServiceLocator]::ServiceProvider.GetService([Sitecore.XA.Foundation.Variants.Abstractions.Services.IAvailableRenderingVariantService])
            $item = Get-Item -Path "$sitePath/Home" -Language $Site.Language
            Write-Verbose "My site: $sitePath"
            
            Write-Verbose "Reset the start item and the rendering host"
            # reset the start item and the rendering host
            $siteName = $Site.Name
            $siteGrouping = Get-Item -Path "$sitePath/Settings/Site Grouping/$($sitename)" -Language $Site.Language
            $siteGrouping.StartItem = $item.ID
            
            # Add sample media
            Add-SampleImages -Site $Site -TemplatePath "/sitecore/templates/Branches/Project/click-click-launch/Alaris/Add Sample Images" -SiteCollection $siteCollection
            
            Write-Verbose "Create page templates in the Site Collection"
            $basePageTemplateId = "{AC9DE9BE-8E86-4147-8FBC-739D5560408B}"
            $baseHomePageTemplateId = "{4ACCF644-A506-421F-B60F-A05E5C6196B4}"
            $baseArticlePageTemplateId = "{B0602368-F67C-433C-8700-862D480546D0}"
            $baseDetailPageTemplateId = "{A9919790-3389-4FC2-ABC8-24F73C847C8E}"
            $baseLandingPageTemplateId = "{C3C9FC9E-E7D3-44E6-B777-AA23496924C7}"
            $baseProductPageTemplateId = "{9A52202D-3A77-4F6D-B9BD-6AECED9BD49A}"
            $basePageFolderTemplateId = "{84DBE64B-0FED-4125-A971-725C0155C321}"
            $audioPageTemplateId = "{1B76AF75-DD75-450C-92E3-FF0F339F490B}"
    
            $templatesRootPath = "master:/sitecore/templates/Project/$($siteCollection.Name)"
    
            $pageTemplate = Get-Item -Path "$templatesRootPath/Page"
            $pageTemplate."__Base template" = $basePageTemplateId
    
            $homePageTemplate = Update-PageTemplate -BaseTemplateId $baseHomePageTemplateId -TemplateName "Home Page" -TemplatesRootPath $templatesRootPath
            $audioPageTemplate = Update-PageTemplate -BaseTemplateId $audioPageTemplateId -TemplateName "Audio Product Page" -TemplatesRootPath $templatesRootPath
            $articlePageTemplate = Update-PageTemplate -BaseTemplateId $baseArticlePageTemplateId -TemplateName "Article Page" -TemplatesRootPath $templatesRootPath
            $detailPageTemplate = Update-PageTemplate -BaseTemplateId $baseDetailPageTemplateId -TemplateName "Detail Page" -TemplatesRootPath $templatesRootPath
            $landingPageTemplate = Update-PageTemplate -BaseTemplateId $baseLandingPageTemplateId -TemplateName "Landing Page" -TemplatesRootPath $templatesRootPath
            $productPageTemplate = Update-PageTemplate -BaseTemplateId $baseProductPageTemplateId -TemplateName "Product Page" -TemplatesRootPath $templatesRootPath
            $pageFolderTemplate = Update-PageTemplate -BaseTemplateId $basePageFolderTemplateId -TemplateName "Page Folder" -TemplatesRootPath $templatesRootPath
    
            Write-Verbose "Update insert options"
            $insertOptions = @( $articlePageTemplate.ID, $audioPageTemplate.ID, $detailPageTemplate.ID, $landingPageTemplate.ID, $productPageTemplate.ID, $pageFolderTemplate.ID )
            Update-TemplateInsertOptions -TemplateItem $homePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $audioPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $articlePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $detailPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $articlePageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $landingPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $productPageTemplate -InsertOptions $insertOptions
            Update-TemplateInsertOptions -TemplateItem $pageFolderTemplate -InsertOptions $insertOptions
    
            # Add Page Design and link partial designs
            Write-Verbose "Add Page Design and link partial designs"
            $headerPartial = Get-Item -Path "$sitePath/Presentation/Partial Designs/Global/Header" -Language $Site.Language
            $footerPartial = Get-Item -Path "$sitePath/Presentation/Partial Designs/Global/Footer" -Language $Site.Language
    
            $defaultPageDesign = New-Item -Path "$($sitePath)/Presentation/Page Designs" -Name "Default" -ItemType "{1105B8F8-1E00-426B-BF1F-C840742D827B}"
            $defaultPageDesign.PartialDesigns = "$($headerPartial.ID)|$($footerPartial.ID)"
    
            $pageDesigns = Get-Item -path "$sitePath/Presentation/Page Designs" -Language $Site.Language
            $map = [Sitecore.Text.UrlString]::new()
            $map[$homePageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$pageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$audioPageTemplate.ID] = "$($productPageDesign.ID)"
            $map[$articlePageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$detailPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$landingPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $map[$productPageTemplate.ID] = "$($defaultPageDesign.ID)"
            $pageDesigns.TemplatesMapping = [System.Web.HttpUtility]::UrlEncode($map.toString())
            
            Write-Verbose "Update Partial Design Rendering Variants"
            $renderingGlobalHeader = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Global Elements/GlobalHeader'
            $renderingGlobalFooter = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Global Elements/GlobalFooter'
            
            $renderingGlobalHeaderDefinition = $renderingGlobalHeader | New-Rendering
            $renderingGlobalFooterDefinition = $renderingGlobalFooter | New-Rendering
    
            $globalHeaderVariants = $service.GetAvailableRenderingVariants($Site, $renderingGlobalHeader.Name, $renderingGlobalHeader.ID, $headerPartial.TemplateID)
            $globalFooterVariants = $service.GetAvailableRenderingVariants($Site, $renderingGlobalFooter.Name, $renderingGlobalFooter.ID, $footerPartial.TemplateID)
            $globalHeaderVariant = $globalHeaderVariants | Where-Object { $_.Name -eq "Centered" }
            $globalFooterVariant = $globalFooterVariants | Where-Object { $_.Name -eq "BlueCompactVariant" }
            
            $globalHeaderRenderingInstance = Get-Rendering -Item $headerPartial -Rendering $renderingGlobalHeader -FinalLayout
            if ($globalHeaderRenderingInstance) {
                Set-Rendering -Item $headerPartial -Instance $globalHeaderRenderingInstance -Parameter @{ "FieldNames" = $globalHeaderVariant.ID } -FinalLayout
            }
            $globalFooterRenderingInstance = Get-Rendering -Item $footerPartial -Rendering $renderingGlobalFooter -FinalLayout
            if ($globalFooterRenderingInstance) {
                Set-Rendering -Item $footerPartial -Instance $globalFooterRenderingInstance -Parameter @{ "FieldNames" = $globalFooterVariant.ID } -FinalLayout
            }
            
            Write-Verbose "Update header links"
            $headerDatasource = Get-Item -Path "$($headerPartial.ItemPath)/Data/Global Header" -Language $Site.Language
            $aeroLink = Get-Item -Path "$($headerDatasource.ItemPath)/Primary Navigation Links/Aero" -Language $Site.Language
            $nexaLink = Get-Item -Path "$($headerDatasource.ItemPath)/Primary Navigation Links/Nexo" -Language $Site.Language #Typo is deliberate
            $terraLink = Get-Item -Path "$($headerDatasource.ItemPath)/Primary Navigation Links/Terra" -Language $Site.Language
            
            $aeroPage = Get-Item -Path "$sitePath/Home/Products/Aero" -Language $Site.Language
            $nexaPage = Get-Item -Path "$sitePath/Home/Products/Nexa" -Language $Site.Language
            $nexaPageHeader = Get-Item -Path "$sitePath/Home/Products/Nexa/Data/Page Header 1" -Language $Site.Language
            $terraPage = Get-Item -Path "$sitePath/Home/Products/Terra" -Language $Site.Language
            
            Update-LinkField -Item $aeroLink -FieldName "link" -TargetItem $aeroPage
            Update-LinkField -Item $nexaLink -FieldName "link" -TargetItem $nexaPage
            Update-LinkField -Item $terraLink -FieldName "link" -TargetItem $terraPage
            
            $headerDatasource.Editing.BeginEdit()
            $headerDatasource["primaryNavigationLinks"] = "$($aeroLink.ID)|$($nexaLink.ID)|$($terraLink.ID)"
            $headerDatasource.Editing.EndEdit()
            
            $testDriveItem = $item.Children["Test Drive"]
            Update-LinkField -Item $headerDatasource -FieldName "headerContact" -TargetItem $testDriveItem
            $homePageHeroItem = Get-Item -Path "$($item.ItemPath)/Data/Home Page Hero" -Language $Site.Language 
            Update-LinkField -Item $homePageHeroItem -FieldName "bannerCTA" -TargetItem $testDriveItem
            
            $homePageProductListingItem = Get-Item -Path "$($item.ItemPath)/Data/Home Page Product Listing" -Language $Site.Language
            $homePageProductListingItem.Editing.BeginEdit()
            $homePageProductListingItem["products"] = "$($aeroPage.ID)|$($nexaPage.ID)|$($terraPage.ID)"
            $homePageProductListingItem.Editing.EndEdit()
            
            Get-Item -Path "$($item.ItemPath)/Data/Home Page Image Carousel/Slide 1" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $aeroPage
            Get-Item -Path "$($item.ItemPath)/Data/Home Page Image Carousel/Slide 2" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $nexaPage
            Get-Item -Path "$($item.ItemPath)/Data/Home Page Image Carousel/Slide 3" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $terraPage
            Get-Item -Path "$($item.ItemPath)/Data/Home Page Promo" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $testDriveItem
            Get-Item -Path "$($item.ItemPath)/Data/Home Page Accordion" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $testDriveItem
            Get-Item -Path "$($item.ItemPath)/Test Drive/Data/Accordion - Test Drive - Demo Official" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $testDriveItem
            Get-Item -Path "$($item.ItemPath)/Products/Aero/Data/Page Header 2" -Language $Site.Language | Update-LinkField -FieldName "link1" -TargetItem $testDriveItem
            Get-Item -Path "$($item.ItemPath)/Products/Aero/Data/Page Header 2" -Language $Site.Language | Update-LinkField -FieldName "link2" -TargetItem $item
            Get-Item -Path "$($item.ItemPath)/Products/Nexa/Data/Accordion - Nexa - Demo Official" -Language $Site.Language | Update-LinkField -FieldName "link" -TargetItem $nexaPage
            # Re-enable when page header 2 is added to Nexa
            # Get-Item -Path "$($item.ItemPath)/Products/Nexa/Data/Page Header 2" -Language $Site.Language | Update-LinkField -FieldName "link1" -TargetItem $testDriveItem
            # Get-Item -Path "$($item.ItemPath)/Products/Nexa/Data/Page Header 2" -Language $Site.Language | Update-LinkField -FieldName "link2" -TargetItem $item
            
            Write-Verbose "Update product pages with the correct taxonomy"
            $productTag = Get-Item -Path "$sitePath/Data/Taxonomy/Content Types/Product" -Language $Site.Language
            
            $aeroPage.Editing.BeginEdit()
            $aeroPage["taxContentType"] = $productTag.ID
            $aeroPage.Editing.EndEdit()
            
            $nexaPage.Editing.BeginEdit()
            $nexaPage["taxContentType"] = $productTag.ID
            $nexaPage.Editing.EndEdit()
            
            $terraPage.Editing.BeginEdit()
            $terraPage["taxContentType"] = $productTag.ID
            $terraPage.Editing.EndEdit()
    
            Write-Verbose "Update the home page template"
            # Update the home page template
            Set-ItemTemplate -Item $item -Template $homePageTemplate.ID
            # Re-get the item with the new base template
            $item = Get-Item -Path "$sitePath/Home" -Language $Site.Language
            
            Set-ItemTemplate -Path "$sitePath/Home/Products" -Template $pageFolderTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Test Drive" -Template $landingPageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Products/Aero" -Template $productPageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Products/Nexa" -Template $productPageTemplate.ID
            Set-ItemTemplate -Path "$sitePath/Home/Products/Terra" -Template $productPageTemplate.ID
    
            Write-Verbose "Update the home page renderings"
            $renderingContainerFullBleed = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Page Structure/Container Full Bleed'
            $renderingHero = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Banners/Hero'
            $renderingTextBanner = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Banners/TextBanner'
            $renderingImageCarousel = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Media/ImageCarousel'
            $renderingImageGallery = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Media/Image Gallery'
            $renderingPageHeader = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Banners/Page Header'
            $renderingPromo = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Promos/Promo'
            $renderingProductListing = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Product/ProductListing'
            $renderingAccordion = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Accordions/Accordion'
            $renderingLocationSearch = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Location Search/Location Search'
            $renderingSubmissionForm = Get-Item -Path '/sitecore/layout/Renderings/Project/click-click-launch/Forms/Submission Form'
    
            # prepare rendering definitions
            $renderingContainerFullBleedDefinition = $renderingContainerFullBleed | New-Rendering
            $renderingHeroDefinition = $renderingHero | New-Rendering
            $renderingTextBannerDefinition = $renderingTextBanner | New-Rendering
            $renderingImageCarouselDefinition = $renderingImageCarousel | New-Rendering
            $renderingPromoDefinition = $renderingPromo | New-Rendering
            $renderingProductListingDefinition = $renderingProductListing | New-Rendering
            $renderingAccordionDefinition = $renderingAccordion | New-Rendering
            $locSearchVariants = $service.GetAvailableRenderingVariants($Site, $renderingLocationSearch.Name, $renderingLocationSearch.ID, $item.TemplateID)
            $subFormVariants = $service.GetAvailableRenderingVariants($Site, $renderingSubmissionForm.Name, $renderingSubmissionForm.ID, $item.TemplateID)
    
            # prepare rendering variants  
            $heroVariants = $service.GetAvailableRenderingVariants($Site, $renderingHero.Name, $renderingHero.ID, $item.TemplateID)
            $textBannerVariants = $service.GetAvailableRenderingVariants($Site, $renderingTextBanner.Name, $renderingTextBanner.ID, $item.TemplateID)
            $imageCarouselVariants = $service.GetAvailableRenderingVariants($Site, $renderingImageCarousel.Name, $renderingImageCarousel.ID, $item.TemplateID)
            $promoVariants = $service.GetAvailableRenderingVariants($Site, $renderingPromo.Name, $renderingPromo.ID, $item.TemplateID)
            $accordionVariants = $service.GetAvailableRenderingVariants($Site, $renderingAccordion.Name, $renderingAccordion.ID, $item.TemplateID)
            $imageGalleryVariants = $service.GetAvailableRenderingVariants($Site, $renderingImageGallery.Name, $renderingImageGallery.ID, $item.TemplateID)
            $pageHeaderVariants = $service.GetAvailableRenderingVariants($Site, $renderingPageHeader.Name, $renderingPageHeader.ID, $item.TemplateID)
    
            $heroVariant = $heroVariants | Where-Object { $_.DisplayName -eq "Image Background" }
            $textBannerVariant = $textBannerVariants | Where-Object { $_.Name -eq "Default" }
            $imageCarouselVariant = $imageCarouselVariants | Where-Object { $_.Name -eq "Default" }
            $promoVariant = $promoVariants | Where-Object { $_.Name -eq "Default" }
            $accordionVariant = $accordionVariants | Where-Object { $_.Name -eq "Default" }
            $accordion5050Variant = $accordionVariants | Where-Object { $_.Name -eq "Fifty Fifty Title Above" }
            $imageGalleryVariant = $imageGalleryVariants | Where-Object { $_.Name -eq "Default" }
            $pageHeaderVariant = $pageHeaderVariants | Where-Object { $_.Name -eq "Default" }
            $locSearchVariant = $locSearchVariants | Where-Object { $_.Name -eq "Default" }
            $subFormVariant = $subFormVariants | Where-Object { $_.Name -eq "Default" }
    
            # add Home layout
            Add-Rendering -Item $item -PlaceHolder "headless-main" -Instance $renderingContainerFullBleedDefinition -Parameter @{ "DynamicPlaceholderId" = "1"; "excludeTopMargin" = "1" } -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingHeroDefinition -Parameter @{ "FieldNames" = $heroVariant.ID; "DynamicPlaceholderId" = "2" } -DataSource "local:/Data/Home Page Hero" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingTextBannerDefinition -Parameter @{ "FieldNames" = $textBannerVariant.ID; "DynamicPlaceholderId" = "3" } -DataSource "local:/Data/Home Page Text Banner" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingImageCarouselDefinition -Parameter @{ "FieldNames" = $imageCarouselVariant.ID; "DynamicPlaceholderId" = "5" } -DataSource "local:/Data/Home Page Image Carousel" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingPromoDefinition -Parameter @{ "FieldNames" = $promoVariant.ID; "DynamicPlaceholderId" = "4" } -DataSource "local:/Data/Home Page Promo" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingProductListingDefinition -DataSource "local:/Data/Home Page Product Listing" -FinalLayout
            Add-Rendering -Item $item -PlaceHolder "/headless-main/container-fullbleed-1" -Instance $renderingAccordionDefinition -Parameter @{ "FieldNames" = $accordionVariant.ID; "DynamicPlaceholderId" = "6" } -DataSource "local:/Data/Home Page Accordion" -FinalLayout
    
            # update Nexa product
            Get-Rendering -Item $nexaPage -Rendering $renderingImageGallery -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $imageGalleryVariant.ID } | `
                Set-Rendering -Item $nexaPage -FinalLayout            
            Get-Rendering -Item $nexaPage -Rendering $renderingPageHeader -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $pageHeaderVariant.ID } | `
                Set-Rendering -Item $nexaPage -FinalLayout
            Get-Rendering -Item $nexaPage -Rendering $renderingTextBanner -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $textBannerVariant.ID } | `
                Set-Rendering -Item $nexaPage -FinalLayout
            Get-Rendering -Item $nexaPage -Rendering $renderingPromo -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $promoVariant.ID } | `
                Set-Rendering -Item $nexaPage -FinalLayout
            Get-Rendering -Item $nexaPage -Rendering $renderingAccordion -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $accordionCenteredVariant.ID } | `
                Set-Rendering -Item $nexaPage -FinalLayout
            Update-LinkField -Item $nexaPageHeader -FieldName "link1" -TargetItem $testDriveItem
            Update-LinkField -Item $nexaPageHeader -FieldName "link2" -TargetItem $item
            # update Aero product
            Get-Rendering -Item $aeroPage -Rendering $renderingImageGallery -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $imageGalleryVariant.ID } | `
                Set-Rendering -Item $aeroPage -FinalLayout
            Get-Rendering -Item $aeroPage -Rendering $renderingPageHeader -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $pageHeaderVariant.ID } | `
                Set-Rendering -Item $aeroPage -FinalLayout
            Get-Rendering -Item $aeroPage -Rendering $renderingTextBanner -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $textBannerVariant.ID } | `
                Set-Rendering -Item $aeroPage -FinalLayout
            # update Test Drive landing
            Get-Rendering -Item $testDriveItem -Rendering $renderingPageHeader -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $pageHeaderVariant.ID } | `
                Set-Rendering -Item $testDriveItem -FinalLayout
            Get-Rendering -Item $testDriveItem -Rendering $renderingPromo -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $promoVariant.ID } | `
                Set-Rendering -Item $testDriveItem -FinalLayout
            Get-Rendering -Item $testDriveItem -Rendering $renderingAccordion -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $accordion5050Variant.ID } | `
                Set-Rendering -Item $testDriveItem -FinalLayout
            Get-Rendering -Item $testDriveItem -Rendering $renderingLocationSearch -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $locSearchVariant.ID } | `
                Set-Rendering -Item $testDriveItem -FinalLayout
            Get-Rendering -Item $testDriveItem -Rendering $renderingSubmissionForm -FinalLayout | `
                Set-RenderingParameter -Parameter @{ "FieldNames" = $subFormVariant.ID } | `
                Set-Rendering -Item $testDriveItem -FinalLayout
      
            Write-Verbose "Update home page fields"
            $title = "Alaris - Get set for an electric future."
            $shortTitle = "Alaris"
    
            $item."pageTitle" = $title
            $item."pageShortTitle" = $shortTitle
            $item."pageHeaderTitle" = $shortTitle
            $item."pageSummary" = $title
    
            $item."metadataTitle" = $title
            $item."metadataDescription" = $title
            $item."metadataKeywords" = "Alaris, electric, future"
            $item."ogTitle" = $title
            $item."ogDescription" = $title
    
            # Add Promo variants
            $promoVariant = Get-Item -Path "$sitePath/Presentation/Headless Variants/Promo" -Language $Site.Language
            $imageLeftVariant = New-Item -Parent $promoVariant -Name "ImageLeft" -ItemType "{4D50CDAE-C2D9-4DE8-B080-8F992BFB1B55}"
            $imageLeftVariant.'__Display name' = "Image Left"
            $imageMiddleVariant = New-Item -Parent $promoVariant -Name "ImageMiddle" -ItemType "{4D50CDAE-C2D9-4DE8-B080-8F992BFB1B55}"
            $imageMiddleVariant.'__Display name' = "Image Middle"
            $imageRightVariant = New-Item -Parent $promoVariant -Name "ImageRight" -ItemType "{4D50CDAE-C2D9-4DE8-B080-8F992BFB1B55}"
            $imageRightVariant.'__Display name' = "Image Right"
            $titlePartialOverlayVariant = New-Item -Parent $promoVariant -Name "TitlePartialOverlay" -ItemType "{4D50CDAE-C2D9-4DE8-B080-8F992BFB1B55}"
            $titlePartialOverlayVariant.'__Display name' = "Title Partial Overlay"
    
            Write-Verbose "Create dictionary items"
            $dictionaryRoot = Get-Item -Path "$sitePath/Dictionary" -Language $Site.Language
            $dictionaryBranchTemplate = Get-Item -Path "/sitecore/templates/Branches/Project/click-click-launch/Alaris/Add Dictionary Items" -Language $Site.Language
            New-Item -Parent $dictionaryRoot -Name "Dictionary Items" -ItemType $dictionaryBranchTemplate.ID
        }
        
        end {
            Write-Verbose "Cmdlet Invoke-ModuleScriptBody - End"
        }
    }
    
    #$site = Get-Item .
    #Invoke-ModuleScriptBody -Site $site -Verbose
- ID: "dbbbeca1-21c7-4906-9dd2-493c1efa59a2"
  Hint: __Shared revision
  Value: "c40fcc67-e9e0-41f8-a0f4-990b5b9cf455"
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20250528T220505Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "e07650cc-af46-49ed-a8f8-9cffb7645a4d"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\richard.seal@sitecore.com
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250724T014119Z
